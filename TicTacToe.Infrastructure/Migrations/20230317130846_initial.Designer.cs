// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using TicTacToe.Infrastructure.Persistence;

#nullable disable

namespace TicTacToe.API.Migrations
{
    [DbContext(typeof(TicTacToeDbContext))]
    [Migration("20230317130846_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TicTacToe.API.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BluePlayerId")
                        .HasColumnType("uuid");

                    b.Property<string[]>("CurrentState")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text[]")
                        .HasDefaultValue(new[] { "...", "...", "..." });

                    b.Property<Guid?>("PlayerTurn")
                        .IsRequired()
                        .HasColumnType("uuid");

                    b.Property<Guid>("RedPlayerId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(127)
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<int>("StepCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BluePlayerId");

                    b.HasIndex("RedPlayerId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("TicTacToe.API.Entities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("character varying(31)");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("TicTacToe.API.Entities.Game", b =>
                {
                    b.HasOne("TicTacToe.API.Entities.Player", "BluePlayer")
                        .WithMany("GamesLikeBluePlayer")
                        .HasForeignKey("BluePlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicTacToe.API.Entities.Player", "RedPlayer")
                        .WithMany("GamesLikeRedPlayer")
                        .HasForeignKey("RedPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BluePlayer");

                    b.Navigation("RedPlayer");
                });

            modelBuilder.Entity("TicTacToe.API.Entities.Player", b =>
                {
                    b.Navigation("GamesLikeBluePlayer");

                    b.Navigation("GamesLikeRedPlayer");
                });
#pragma warning restore 612, 618
        }
    }
}
